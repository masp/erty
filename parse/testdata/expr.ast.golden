     0  *ast.FuncDecl {
     1  .  Func: 1
     2  .  LeftBrace: 13
     3  .  RightBrace: 51
     4  .  Name: *ast.Identifier {
     5  .  .  NamePos: 6
     6  .  .  Name: "expr"
     7  .  }
     8  .  Statements: []ast.Statement (len = 2) {
     9  .  .  0: *ast.ExprStatement {
    10  .  .  .  Expression: *ast.AssignExpr {
    11  .  .  .  .  Left: *ast.Identifier {
    12  .  .  .  .  .  NamePos: 19
    13  .  .  .  .  .  Name: "test"
    14  .  .  .  .  }
    15  .  .  .  .  Equals: 24
    16  .  .  .  .  Right: *ast.AtomLiteral {
    17  .  .  .  .  .  QuotePos: 26
    18  .  .  .  .  .  Value: "hello"
    19  .  .  .  .  }
    20  .  .  .  }
    21  .  .  }
    22  .  .  1: *ast.ExprStatement {
    23  .  .  .  Expression: *ast.AssignExpr {
    24  .  .  .  .  Left: *ast.Identifier {
    25  .  .  .  .  .  NamePos: 38
    26  .  .  .  .  .  Name: "a"
    27  .  .  .  .  }
    28  .  .  .  .  Equals: 40
    29  .  .  .  .  Right: *ast.BinaryExpr {
    30  .  .  .  .  .  Left: *ast.IntLiteral {
    31  .  .  .  .  .  .  IntPos: 42
    32  .  .  .  .  .  .  Lit: "3"
    33  .  .  .  .  .  .  Value: 3
    34  .  .  .  .  .  }
    35  .  .  .  .  .  OpPos: 44
    36  .  .  .  .  .  Op: Plus
    37  .  .  .  .  .  Right: *ast.IntLiteral {
    38  .  .  .  .  .  .  IntPos: 46
    39  .  .  .  .  .  .  Lit: "5"
    40  .  .  .  .  .  .  Value: 5
    41  .  .  .  .  .  }
    42  .  .  .  .  }
    43  .  .  .  }
    44  .  .  }
    45  .  }
    46  }
