'test'/1 =
    (fun (_0) ->
        case (_0
        -| [{'function',{'test',1}}]) of
            <0> when 'true' ->
                0
            <1> when 'true' ->
                1
            <_1> when 'true' ->
                let <_2> =
                    let <_3> =
                        call 'erlang':'-'
                            (_1,1)
                    in apply 'test'/1
                        (_3)
                in let <_4> =
                    let <_5> =
                        call 'erlang':'-'
                            (_1,2)
                    in apply 'test'/1
                        (_5)
                in call 'erlang':'+'
                    (_2,_4)
        end
        -| [{'function',{'test',1}}])
