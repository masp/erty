module 'fib' ['main'/1,'fib'/1,'module_info'/0,'module_info'/1]
    attributes [
        ]
'main'/1 =
    (fun (_0) ->
        let <_1> =
            #{#<126>(1,8,'integer',['unsigned'|['big'|[]]]),
                #<119>(1,8,'integer',['unsigned'|['big'|[]]])}#
        in let <_2> =
            [apply 'fib'/1
                (16)|[]]
        in call 'io':'format'
            (_1,_2)
        -| [{'function',{'main',1}}])
'fib'/1 =
    (fun (_0) ->
        case (_0
        -| [{'function',{'fib',1}}]) of
            <1> when 'true' ->
                1
            <2> when 'true' ->
                2
            <_1> when 'true' ->
                let <_2> =
                    let <_3> =
                        call 'erlang':'-'
                            (_1,1)
                    in apply 'fib'/1
                        (_3)
                in let <_4> =
                    let <_5> =
                        call 'erlang':'-'
                            (_1,2)
                    in apply 'fib'/1
                        (_5)
                in call 'erlang':'+'
                    (_2,_4)
        -| [{'function',{'fib',1}}])
'module_info'/0 =
    (fun () ->
        call 'erlang':'module_info'
            ('fib')
        -| [{'function',{'module_info',0}}])
'module_info'/1 =
    (fun (_0) ->
        call 'erlang':'module_info'
            ('fib',(_0
            -| [{'function',{'module_info',1}}]))
        -| [{'function',{'module_info',1}}])
end