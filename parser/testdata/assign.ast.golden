     0  *ast.FuncDecl {
     1  .  Func: <string>:1:1
     2  .  LeftBrace: <string>:1:15
     3  .  RightBrace: <string>:1:51
     4  .  Name: *ast.Identifier {
     5  .  .  NamePos: <string>:1:6
     6  .  .  Name: "assign"
     7  .  }
     8  .  Parameters: *ast.FieldList {
     9  .  .  Opening: <string>:1:12
    10  .  .  Closing: <string>:1:13
    11  .  }
    12  .  Statements: []ast.Statement (len = 3) {
    13  .  .  0: *ast.ExprStatement {
    14  .  .  .  Expression: *ast.AssignExpr {
    15  .  .  .  .  Left: *ast.Identifier {
    16  .  .  .  .  .  NamePos: <string>:1:17
    17  .  .  .  .  .  Name: "a"
    18  .  .  .  .  }
    19  .  .  .  .  Equals: <string>:1:19
    20  .  .  .  .  Right: *ast.FloatLiteral {
    21  .  .  .  .  .  FloatPos: <string>:1:21
    22  .  .  .  .  .  Lit: "1.23"
    23  .  .  .  .  .  Value: 1.23
    24  .  .  .  .  }
    25  .  .  .  }
    26  .  .  }
    27  .  .  1: *ast.ExprStatement {
    28  .  .  .  Expression: *ast.AssignExpr {
    29  .  .  .  .  Left: *ast.Identifier {
    30  .  .  .  .  .  NamePos: <string>:1:27
    31  .  .  .  .  .  Name: "b"
    32  .  .  .  .  }
    33  .  .  .  .  Equals: <string>:1:29
    34  .  .  .  .  Right: *ast.BinaryExpr {
    35  .  .  .  .  .  Left: *ast.ParenExpr {
    36  .  .  .  .  .  .  LParen: <string>:1:31
    37  .  .  .  .  .  .  RParen: <string>:1:35
    38  .  .  .  .  .  .  Expression: *ast.BinaryExpr {
    39  .  .  .  .  .  .  .  Left: *ast.IntLiteral {
    40  .  .  .  .  .  .  .  .  IntPos: <string>:1:32
    41  .  .  .  .  .  .  .  .  Lit: "2"
    42  .  .  .  .  .  .  .  .  Value: 2
    43  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  OpPos: <string>:1:33
    45  .  .  .  .  .  .  .  Op: Plus
    46  .  .  .  .  .  .  .  Right: *ast.IntLiteral {
    47  .  .  .  .  .  .  .  .  IntPos: <string>:1:34
    48  .  .  .  .  .  .  .  .  Lit: "3"
    49  .  .  .  .  .  .  .  .  Value: 3
    50  .  .  .  .  .  .  .  }
    51  .  .  .  .  .  .  }
    52  .  .  .  .  .  }
    53  .  .  .  .  .  OpPos: <string>:1:36
    54  .  .  .  .  .  Op: Star
    55  .  .  .  .  .  Right: *ast.IntLiteral {
    56  .  .  .  .  .  .  IntPos: <string>:1:37
    57  .  .  .  .  .  .  Lit: "4"
    58  .  .  .  .  .  .  Value: 4
    59  .  .  .  .  .  }
    60  .  .  .  .  }
    61  .  .  .  }
    62  .  .  }
    63  .  .  2: *ast.ExprStatement {
    64  .  .  .  Expression: *ast.AssignExpr {
    65  .  .  .  .  Left: *ast.Identifier {
    66  .  .  .  .  .  NamePos: <string>:1:40
    67  .  .  .  .  .  Name: "c"
    68  .  .  .  .  }
    69  .  .  .  .  Equals: <string>:1:42
    70  .  .  .  .  Right: *ast.AtomLiteral {
    71  .  .  .  .  .  QuotePos: <string>:1:44
    72  .  .  .  .  .  Value: "atom"
    73  .  .  .  .  }
    74  .  .  .  }
    75  .  .  }
    76  .  }
    77  }
